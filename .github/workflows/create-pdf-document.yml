# This workflow takes the pages from GitHub Pages and creates a single markdown file 
# that can be used to generate a PDF using pandoc.
# The workflow is triggered on every commit to the repository.

name: Create a PDF Version of Canine Cleansing Standard

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      mode:
        required: true
        type: string

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write


jobs:
  # Build job
  build:
    defaults:
      run:
        shell: pwsh
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create single markdown file
        id: createSingleMarkdown
        run: |
          Import-Module ./scripts/modules/markdown.psm1
          # This powershell script demonstrates how to create a single markdown file from multiple markdown files
          # and replace the internal links with the generated links.
          # The script is part of the Canine Cleansing Standard (CCS-2025) project.
          # The script is used to generate a single markdown file that can be used to generate a PDF using pandoc.
          # pandoc.exe .\outputmarkdown.md -o output.pdf --toc

          #prepare the environment

          $version = "${{ inputs.version }}"
          $mode = "${{ inputs.mode }}"

          $reponame = "${{ github.event.repository.name }}"
          $commitHash = git rev-parse --short HEAD

          $pandocHeaderFile = "_layouts/pandocheader.tex"
          $ouputFile = "outputmarkdown.md"
          $readmeFile = "README.md"
          $indexFile = "index.md"   
         
          # prepare the verbose version strings
          if ($mode -eq 'build') 
          {
            $verboseVersion = "Draft-$version-$commitHash"
            $verboseVersionPDF = "Draft: $version-$commitHash"
          }
          else
          {
            $verboseVersion = "Release-$version-$commitHash"
            $verboseVersionPDF = "Release: $version-$commitHash"
          }

          # create the pdf file name
          $pdffileName = "$reponame-$verboseVersion.pdf"

          # Write the pdffilename to the environment
          Write-Output "pdfFileName=$pdffileName" >>$env:GITHUB_OUTPUT

          Write-Output "Input Version: $version; Input Mode: $mode; Repository: '$reponame'; Version: '$version'; Mode: '$mode'; CommitHash: '$commitHash'; VerboseVersion: '$verboseVersion'; VerboseVersionPDF: '$verboseVersionPDF'; PDF File Name: '$pdffileName'"
         
          # Get all markdown files in the repository that should be concatenated
          $markdownFileNames = @(Get-ChildItem -Path *.md -Exclude $readmeFile, $indexFile, $ouputFile)

          # Load the markdown files into a collection
          $pageCollection = Get-Markdown-Files -markdownFileNames $markdownFileNames

          # Read and add Latex Header file to Output Markdown
          $outputMarkdown = Get-Content $pandocHeaderFile -Raw
          $outputMarkdown = $outputMarkdown.Replace("\def\version",$verboseVersionPDF).Replace("\def\commitid",$commitHash).Replace("\def\tag",$version)

          # Add the content of the markdown files to a single markdown
          $outputMarkdown += Join-Markdown -pageCollection $pageCollection

          # Write the output markdown to a file
          Set-Content -Encoding UTF8 -Path $ouputFile -Value $outputMarkdown

      - name: Publish single markdown file
        uses: actions/upload-artifact@v4
        with:
          name: SingleMarkDownFile
          path: outputmarkdown.md
          retention-days: 5
      
      - name: Run Pandoc to create PDF
        uses: docker://pandoc/latex:latest
        with:
            args: outputmarkdown.md -o ${{steps.createSingleMarkdown.outputs.pdfFileName}} --toc

      - name: Publish PDF
        uses: actions/upload-artifact@v4
        with:
          name: ${{steps.createSingleMarkdown.outputs.pdfFileName}}
          path: ${{steps.createSingleMarkdown.outputs.pdfFileName}}
          retention-days: 5
      
      - name: Upload binaries to release
        if: ${{ inputs.mode == 'release' }}
        uses: svenstaro/upload-release-action@2.9.0
        with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            file: ./${{steps.createSingleMarkdown.outputs.pdfFileName}}
            asset_name: ${{steps.createSingleMarkdown.outputs.pdfFileName}}
            tag: ${{ github.ref }}
            overwrite: true
 

