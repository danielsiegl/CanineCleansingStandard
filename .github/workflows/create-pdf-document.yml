# This workflow takes the pages from GitHub Pages and creates a single markdown file 
# that can be used to generate a PDF using pandoc.
# The workflow is triggered on every commit to the repository.

name: Create a PDF Version of Canine Cleansing Standard

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      mode:
        required: true
        type: string

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write


jobs:
  # Build job
  build:
    defaults:
      run:
        shell: pwsh
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create single markdown file
        id: createSingleMarkdown
        run: |
          # This powershell script demonstrates how to create a single markdown file from multiple markdown files
          # and replace the internal links with the generated links.
          # The script is part of the Canine Cleansing Standard (CCS-2025) project.
          # The script is used to generate a single markdown file that can be used to generate a PDF using pandoc.
          # pandoc.exe .\outputmarkdown.md -o output.pdf --toc

          # Load the markdown script, modules are hard to load in GitHub Actions
          . ./.github/scripts/markdown.ps1
         
          #prepare the environment
          $version = "${{ inputs.version }}"
          $mode = "${{ inputs.mode }}"
          $reponame = "${{ github.event.repository.name }}"
          $commitHash = git rev-parse --short HEAD

          $pandocHeaderFile = "_layouts/pandocheader.tex"
          $ouputFile = "outputmarkdown.md"
          
          New-SingleMarkdownFile -version $version -mode $mode -reponame $reponame -commitHash $commitHash -pandocHeaderFile $pandocHeaderFile -ouputFile $ouputFile
          
          # Compile the PDF file name
          $versionStrings = New-Version-Strings -mode $mode -version $version -commitHash $commitHash -reponame $reponame
          $pdffileName = $versionStrings.pdffileName

          # Write the output file name to the environment         
          Write-Output "ouputFile=$ouputFile" >>$env:GITHUB_OUTPUT
          
          # Write the pdffilename to the environment
          Write-Output "pdfFileName=$pdffileName" >>$env:GITHUB_OUTPUT

      - name: Publish single markdown file
        uses: actions/upload-artifact@v4
        with:
          name: SingleMarkDownFile
          path: outputmarkdown.md
          retention-days: 5
      
      - name: Run Pandoc to create PDF
        uses: docker://pandoc/latex:latest
        with:
            args: ${{steps.createSingleMarkdown.outputs.ouputFile}} -o ${{steps.createSingleMarkdown.outputs.pdfFileName}} --toc

      - name: Publish PDF
        uses: actions/upload-artifact@v4
        with:
          name: ${{steps.createSingleMarkdown.outputs.pdfFileName}}
          path: ${{steps.createSingleMarkdown.outputs.pdfFileName}}
          retention-days: 5
      
      - name: Upload binaries to release
        if: ${{ inputs.mode == 'release' }}
        uses: svenstaro/upload-release-action@2.9.0
        with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            file: ./${{steps.createSingleMarkdown.outputs.pdfFileName}}
            asset_name: ${{steps.createSingleMarkdown.outputs.pdfFileName}}
            tag: ${{ github.ref }}
            overwrite: true
 

